<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="452px" preserveAspectRatio="none" style="width:275px;height:452px;" version="1.1" viewBox="0 0 275 452" width="275px" zoomAndPan="magnify"><defs><filter height="300%" id="f9tl03a1gr4kk" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--class Line--><a href="Line.html" target="_top" xlink:actuate="onRequest" xlink:show="new" xlink:title="Line.html" xlink:type="simple"><rect fill="#FEFECE" filter="url(#f9tl03a1gr4kk)" height="410.7422" id="Line" style="stroke: #A80036; stroke-width: 1.5;" width="258" x="6" y="8"/><ellipse cx="119.25" cy="24" fill="#ADD1B2" rx="11" ry="11" style="stroke: #A80036; stroke-width: 1.0;"/><path d="M122.2231,29.6431 Q121.6421,29.9419 121.0029,30.0913 Q120.3638,30.2407 119.6582,30.2407 Q117.1514,30.2407 115.8315,28.5889 Q114.5117,26.937 114.5117,23.8159 Q114.5117,20.6865 115.8315,19.0347 Q117.1514,17.3828 119.6582,17.3828 Q120.3638,17.3828 121.0112,17.5322 Q121.6587,17.6816 122.2231,17.9805 L122.2231,20.7031 Q121.5923,20.1221 120.9988,19.8523 Q120.4053,19.5825 119.7744,19.5825 Q118.4297,19.5825 117.7449,20.6492 Q117.0601,21.7158 117.0601,23.8159 Q117.0601,25.9077 117.7449,26.9744 Q118.4297,28.041 119.7744,28.041 Q120.4053,28.041 120.9988,27.7712 Q121.5923,27.5015 122.2231,26.9204 Z "/><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="23" x="139.75" y="28.5352">Line</text><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="263" y1="40" y2="40"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="7" x2="263" y1="48" y2="48"/><ellipse cx="17" cy="59.9775" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="30" x="26" y="62.6348">Line()</text><ellipse cx="17" cy="72.9326" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="75" x="26" y="75.5898">Line(double[])</text><ellipse cx="17" cy="85.8877" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="90" x="26" y="88.5449">Line(Point, Point)</text><ellipse cx="17" cy="98.8428" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="120" x="26" y="101.5">Line(Point2D, Point2D)</text><ellipse cx="17" cy="111.7979" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="232" x="26" y="114.4551">fromHough(boolean, int, int, double[]): Line</text><ellipse cx="17" cy="124.7529" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="114" x="26" y="127.4102">init(Point, Point): void</text><ellipse cx="17" cy="137.708" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="26" y="140.3652">length(): double</text><ellipse cx="17" cy="150.6631" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26" y="153.3203">angleRad(): double</text><ellipse cx="17" cy="163.6182" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="101" x="26" y="166.2754">angleDeg(): double</text><ellipse cx="17" cy="176.5732" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="115" x="26" y="179.2305">angleDeg90(): double</text><ellipse cx="17" cy="189.5283" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="192.1855">getPoint1(): Point2D</text><ellipse cx="17" cy="202.4834" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="107" x="26" y="205.1406">getPoint2(): Point2D</text><ellipse cx="17" cy="215.4385" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="108" x="26" y="218.0957">average(Line[]): Line</text><ellipse cx="17" cy="228.3936" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="172" x="26" y="231.0508">average(Collection&lt;Line&gt;): Line</text><ellipse cx="17" cy="241.3486" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="163" x="26" y="244.0059">isLeftOfLine(Point2D): boolean</text><ellipse cx="17" cy="254.3037" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="171" x="26" y="256.9609">isRightOfLine(Point2D): boolean</text><ellipse cx="17" cy="267.2588" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="169" x="26" y="269.916">existsOnLine(Point2D): boolean</text><ellipse cx="17" cy="280.2139" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="121" x="26" y="282.8711">bottomMost(): Point2D</text><ellipse cx="17" cy="293.1689" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="99" x="26" y="295.8262">leftMost(): Point2D</text><ellipse cx="17" cy="306.124" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="108" x="26" y="308.7813">rightMost(): Point2D</text><ellipse cx="17" cy="319.0791" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="100" x="26" y="321.7363">topMost(): Point2D</text><ellipse cx="17" cy="332.0342" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="133" x="26" y="334.6914">pointAt(double): Point2D</text><ellipse cx="17" cy="344.9893" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="80" x="26" y="347.6465">width(): double</text><ellipse cx="17" cy="357.9443" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="85" x="26" y="360.6016">height(): double</text><ellipse cx="17" cy="370.8994" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="145" x="26" y="373.5566">angleString(Double): String</text><ellipse cx="17" cy="383.8545" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" text-decoration="underline" textLength="150" x="26" y="386.5117">lineAngleString(Line): String</text><ellipse cx="17" cy="396.8096" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="189" x="26" y="399.4668">intersect(Line): Optional&lt;Point2D&gt;</text><ellipse cx="17" cy="409.7646" fill="#84BE84" rx="3" ry="3" style="stroke: #038048; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="11" lengthAdjust="spacingAndGlyphs" textLength="138" x="26" y="412.4219">distance(Point2D): double</text></a><text fill="#888888" font-family="sans-serif" font-size="10" lengthAdjust="spacingAndGlyphs" textLength="182" x="50" y="438.668">UMLDoclet 1.1.4, PlantUML 1.2019.05</text><!--
@startuml

    class Line [[Line.html]] {
        +Line()
        +Line(double[])
        +Line(Point, Point)
        +Line(Point2D, Point2D)
        {static} +fromHough(boolean, int, int, double[]): Line
        +init(Point, Point): void
        +length(): double
        +angleRad(): double
        +angleDeg(): double
        +angleDeg90(): double
        +getPoint1(): Point2D
        +getPoint2(): Point2D
        {static} +average(Line[]): Line
        {static} +average(Collection<Line>): Line
        +isLeftOfLine(Point2D): boolean
        +isRightOfLine(Point2D): boolean
        +existsOnLine(Point2D): boolean
        +bottomMost(): Point2D
        +leftMost(): Point2D
        +rightMost(): Point2D
        +topMost(): Point2D
        +pointAt(double): Point2D
        +width(): double
        +height(): double
        {static} +angleString(Double): String
        {static} +lineAngleString(Line): String
        +intersect(Line): Optional<Point2D>
        +distance(Point2D): double
    }


    center footer UMLDoclet 1.1.4, PlantUML 1.2019.05
@enduml

PlantUML version 1.2019.05(Sat Apr 20 18:45:36 CEST 2019)
(APACHE source distribution)
Java Runtime: Java(TM) SE Runtime Environment
JVM: Java HotSpot(TM) 64-Bit Server VM
Java Version: 1.8.0_152-b16
Operating System: Mac OS X
OS Version: 10.13.6
Default Encoding: UTF-8
Language: de
Country: DE
--></g></svg>